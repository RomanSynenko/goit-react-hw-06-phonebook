{"version":3,"sources":["Components/Filter/Filter.module.scss","Components/ContainerStyle.module.scss","redux/action.js","Components/ContactForm/ContactForm.js","Components/ContatctList/ContatctList.js","Components/Filter/Filter.js","Components/App.js","redux/reducer.js","redux/store.js","index.js","Components/ContactForm/Form.module.scss","Components/ContatctList/List.module.scss"],"names":["module","exports","addContact","createAction","data","payload","id","uuidv4","deleteContact","filterContact","INITIAL_STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","uniqueContact","props","find","contact","handleFormSubmit","e","preventDefault","onSubmit","resetForm","alert","this","className","s","title","contact_form","contact_input","type","placeholder","onChange","Component","connect","contacts","items","map","dispatch","actions","ContactListItem","onRemove","contact_item","contact_name","delete_button","onClick","visibleContacts","allContacts","filter","normolizedFilter","toLowerCase","includes","action","length","contact_list","console","log","search_block","App","container","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5b8d6b00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__21DuS\",\"contact_input\":\"Filter_contact_input__3mrr1\",\"search_block\":\"Filter_search_block__2np_P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContainerStyle_container__29SzB\"};","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\n\nconst addContact = createAction('contact/add', data => ({\n    payload: {\n        id: uuidv4(),\n        ...data,\n    },\n}));\nconst deleteContact = createAction('contact/delete');\nconst filterContact = createAction('contact/changeFilter');\n\nexport default { addContact, deleteContact, filterContact };\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\nimport { v4 as uuid } from 'uuid';\nimport actions from \"../../redux/action\";\n\nimport s from './Form.module.scss'\n\nconst INITIAL_STATE = {\n    name: '',\n    phone: '',\n}\nclass ContactForm extends Component {\n    state = {\n        ...INITIAL_STATE\n    }\n    handleChangeForm = ({ target }) => {\n        const { name, value } = target;\n        this.setState({ [name]: value });\n    }\n    uniqueContact = name => {\n        const contact = !this.props.name.find(contact => contact === name);\n        return contact;\n    };\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        const { name } = this.state;\n        this.uniqueContact(name);\n        if (this.state.name !== '') {\n            if (!this.uniqueContact(name)) {\n                alert(`'${name} is already in contacts'`);\n                return;\n            } else {\n                this.props.onSubmit(this.state);\n                this.resetForm();\n            }\n            return;\n        }\n        alert('Enter the name or number');\n    }\n    resetForm = () => this.setState(INITIAL_STATE)\n    render() {\n        const { name, phone } = this.state;\n        return (\n            <>\n                <h2 className={s.title}>Contact Form</h2>\n                <form className={s.contact_form} onSubmit={this.handleFormSubmit}>\n                    <input\n                        className={s.contact_input}\n                        type=\"text\" name='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={this.handleChangeForm} />\n                    <input\n                        className={s.contact_input}\n                        type=\"tel\" name='phone'\n                        placeholder='Enter phone number'\n                        value={phone}\n                        onChange={this.handleChangeForm} />\n                    <button className={s.contact_input}\n                        type='submit'>Add contact</button>\n                </form>\n            </>\n        )\n    }\n};\n\nconst mapStateToProps = state => ({\n    name: state.contacts.items.map(({ name }) => name),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: data => dispatch(actions.addContact(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from 'react';\nimport s from './List.module.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport action from '../../redux/action';\n\n\n\nconst ContactListItem = ({ id, name, phone, onRemove }) => {\n    return (\n        <li className={s.contact_item}>\n            <p className={s.contact_name}>{name} </p> :\n            <p>{phone}</p>\n            <button className={s.delete_button}\n                onClick={() => onRemove(id)}>Delete</button>\n        </li>\n    )\n};\nconst ContactList = ({ contacts, deleteContact }) => {\n    if (contacts.length === 0) return null\n    return (\n        <ul className={s.contact_list}>\n            {\n                contacts.map((contact) => <ContactListItem key={contact.id} {...contact} onRemove={deleteContact} />\n                )\n            }\n        </ul>\n    )\n};\n\n\nconst visibleContacts = (allContacts, filter) => {\n    const normolizedFilter = filter.toLowerCase();\n\n    return allContacts.filter(contact =>\n        contact.name.toLowerCase().includes(normolizedFilter),\n    );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n    contacts: visibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    deleteContact: id => dispatch(action.deleteContact(id)),\n});\n\n\nContactListItem.propTypes = {\n    contacts: PropTypes.array.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\nContactListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import s from './Filter.module.scss';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport action from '../../redux/action';\nconst Filter = ({ filter, onChange }) => {\n    console.log(onChange)\n    return (\n        <div className={s.search_block}>\n            <h2 className={s.title}>Contacts list</h2>\n            <input\n                className={s.contact_input}\n                type=\"text\"\n                name='filter'\n                value={filter}\n                onChange={onChange}\n                placeholder='Enter name for your Search'\n            />\n        </div>\n    )\n};\nconst mapStateToProps = state => ({\n    value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onChange: e =>\n        dispatch(action.filterContact(e.target.value)),\n});\n\n\nFilter.propTypes = {\n    onChange: PropTypes.func.isRequired,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport ContactForm from \"./ContactForm/ContactForm\";\n\nimport s from './ContainerStyle.module.scss';\nimport ContactList from \"./ContatctList/ContatctList\";\nimport Filter from \"./Filter\";\n\nconst App = () => {\n  return (\n    <div className={s.container}>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  )\n}\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport actions from './action';\n\nconst items = createReducer([], {\n    [actions.addContact]: (state, { payload }) => [...state, payload],\n    [actions.deleteContact]: (state, { payload }) =>\n        state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n    [actions.filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n    items,\n    filter,\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactReducer from \"./reducer\";\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n    logger,\n];\nconst persistConfig = {\n    key: 'contacts',\n    storage,\n    blacklist: ['filter'],\n};\n\nconst store = configureStore({\n    reducer: {\n        contacts: persistReducer(persistConfig, contactReducer),\n    },\n    middleware,\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from './redux/store'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store.store}>\n            <PersistGate loading={null} persistor={store.persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Form_title__3NbAF\",\"contact_form\":\"Form_contact_form__n2Wti\",\"contact_input\":\"Form_contact_input__39-kE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"List_contact_list__3d9ss\",\"delete_button\":\"List_delete_button__1Fy4K\",\"contact_item\":\"List_contact_item__11C51\",\"contact_name\":\"List_contact_name__J7qw0\"};"],"sourceRoot":""}